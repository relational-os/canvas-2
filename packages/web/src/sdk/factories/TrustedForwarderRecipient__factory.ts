/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TrustedForwarderRecipient,
  TrustedForwarderRecipientInterface,
} from "../TrustedForwarderRecipient";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarderAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwarder_",
        type: "address",
      },
    ],
    name: "setForwarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "versionRecipient",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a8e380380610a8e83398181016040528101906100329190610260565b61004e61004361009560201b60201c565b6100d760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061028d565b60006100a63361019b60201b60201c565b156100ba57601436033560601c90506100d3565b6100cc6101f560201b6104151760201c565b90506100d4565b5b90565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061022d82610202565b9050919050565b61023d81610222565b811461024857600080fd5b50565b60008151905061025a81610234565b92915050565b600060208284031215610276576102756101fd565b5b60006102848482850161024b565b91505092915050565b6107f28061029c6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063486ff0cd14610067578063572b6c0514610085578063715018a6146100b55780638da5cb5b146100bf578063b9998a24146100dd578063f2fde38b146100f9575b600080fd5b61006f610115565b60405161007c91906105ac565b60405180910390f35b61009f600480360381019061009a9190610631565b610152565b6040516100ac9190610679565b60405180910390f35b6100bd6101ac565b005b6100c7610234565b6040516100d491906106a3565b60405180910390f35b6100f760048036038101906100f29190610631565b61025d565b005b610113600480360381019061010e9190610631565b61031d565b005b60606040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6101b461041d565b73ffffffffffffffffffffffffffffffffffffffff166101d2610234565b73ffffffffffffffffffffffffffffffffffffffff1614610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f9061070a565b60405180910390fd5b610232600061044f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61026561041d565b73ffffffffffffffffffffffffffffffffffffffff16610283610234565b73ffffffffffffffffffffffffffffffffffffffff16146102d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d09061070a565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61032561041d565b73ffffffffffffffffffffffffffffffffffffffff16610343610234565b73ffffffffffffffffffffffffffffffffffffffff1614610399576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103909061070a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610409576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104009061079c565b60405180910390fd5b6104128161044f565b50565b600033905090565b600061042833610152565b1561043c57601436033560601c905061044b565b610444610415565b905061044c565b5b90565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561054d578082015181840152602081019050610532565b8381111561055c576000848401525b50505050565b6000601f19601f8301169050919050565b600061057e82610513565b610588818561051e565b935061059881856020860161052f565b6105a181610562565b840191505092915050565b600060208201905081810360008301526105c68184610573565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105fe826105d3565b9050919050565b61060e816105f3565b811461061957600080fd5b50565b60008135905061062b81610605565b92915050565b600060208284031215610647576106466105ce565b5b60006106558482850161061c565b91505092915050565b60008115159050919050565b6106738161065e565b82525050565b600060208201905061068e600083018461066a565b92915050565b61069d816105f3565b82525050565b60006020820190506106b86000830184610694565b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006106f460208361051e565b91506106ff826106be565b602082019050919050565b60006020820190508181036000830152610723816106e7565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061078660268361051e565b91506107918261072a565b604082019050919050565b600060208201905081810360008301526107b581610779565b905091905056fea264697066735822122032d9e692bebbc021474cc1d1f0af77d505601d19da01c17eaaf6da4565a44d0c64736f6c63430008090033";

export class TrustedForwarderRecipient__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    forwarderAddress_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TrustedForwarderRecipient> {
    return super.deploy(
      forwarderAddress_,
      overrides || {}
    ) as Promise<TrustedForwarderRecipient>;
  }
  getDeployTransaction(
    forwarderAddress_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(forwarderAddress_, overrides || {});
  }
  attach(address: string): TrustedForwarderRecipient {
    return super.attach(address) as TrustedForwarderRecipient;
  }
  connect(signer: Signer): TrustedForwarderRecipient__factory {
    return super.connect(signer) as TrustedForwarderRecipient__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrustedForwarderRecipientInterface {
    return new utils.Interface(_abi) as TrustedForwarderRecipientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TrustedForwarderRecipient {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TrustedForwarderRecipient;
  }
}
