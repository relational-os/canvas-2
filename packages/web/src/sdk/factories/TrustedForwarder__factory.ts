/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TrustedForwarder,
  TrustedForwarderInterface,
} from "../TrustedForwarder";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct TrustedForwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct TrustedForwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b506040518060400160405280600e81526020017f457871756973697465204c616e640000000000000000000000000000000000008152506040518060400160405280600581526020017f302e302e3100000000000000000000000000000000000000000000000000000081525060008280519060200120905060008280519060200120905060007f91ab3d17e3a50a9d89e63fd30b92be7f5336b03b287bb946787a83a9d62a276690508260c081815250508160e081815250504660a08181525050620000e78184846200010260201b60201c565b608081815250508061010081815250505050505050620001e9565b6000838383306040516020016200011d94939291906200019c565b6040516020818303038152906040528051906020012090509392505050565b6000819050919050565b62000151816200013c565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001848262000157565b9050919050565b620001968162000177565b82525050565b6000608082019050620001b3600083018762000146565b620001c2602083018662000146565b620001d1604083018562000146565b620001e060608301846200018b565b95945050505050565b60805160a05160c05160e0516101005161140a6200022e600039600061052b0152600061056d0152600061054c015260006104d801526000610500015261140a6000f3fe6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f8214610076578063bf5d3bdb146100a7575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610a1d565b6100e4565b60405161006d9190610a63565b60405180910390f35b610090600480360381019061008b9190610b07565b61012c565b60405161009e929190610c37565b60405180910390f35b3480156100b357600080fd5b506100ce60048036038101906100c99190610b07565b6102de565b6040516100db9190610c67565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000606061013b8585856102de565b61017a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017190610d05565b60405180910390fd5b6001856080013561018b9190610d54565b6000808760000160208101906101a19190610a1d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808660200160208101906101f59190610a1d565b73ffffffffffffffffffffffffffffffffffffffff1687606001358860400135898060a001906102259190610db9565b8b60000160208101906102389190610a1d565b60405160200161024a93929190610ea3565b6040516020818303038152906040526040516102669190610efe565b600060405180830381858888f193505050503d80600081146102a4576040519150601f19603f3d011682016040523d82523d6000602084013e6102a9565b606091505b5091509150603f87606001356102bf9190610f44565b5a116102ce576102cd610f75565b5b8181935093505050935093915050565b6000806103e784848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506103d97fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e488860000160208101906103609190610a1d565b8960200160208101906103739190610a1d565b8a604001358b606001358c608001358d8060a001906103929190610db9565b6040516103a0929190610fa4565b60405180910390206040516020016103be9796959493929190610fe5565b60405160208183030381529060405280519060200120610493565b6104ad90919063ffffffff16565b905084608001356000808760000160208101906104049190610a1d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054148015610489575084600001602081019061045a9190610a1d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b9150509392505050565b60006104a66104a06104d4565b83610597565b9050919050565b60008060006104bc85856105ca565b915091506104c98161064d565b819250505092915050565b60007f0000000000000000000000000000000000000000000000000000000000000000461415610526577f00000000000000000000000000000000000000000000000000000000000000009050610594565b6105917f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610822565b90505b90565b600082826040516020016105ac9291906110cc565b60405160208183030381529060405280519060200120905092915050565b60008060418351141561060c5760008060006020860151925060408601519150606086015160001a90506106008782858561085a565b94509450505050610646565b60408351141561063d576000806020850151915060408501519050610632868383610967565b935093505050610646565b60006002915091505b9250929050565b6000600481111561066157610660611103565b5b81600481111561067457610673611103565b5b141561067f5761081f565b6001600481111561069357610692611103565b5b8160048111156106a6576106a5611103565b5b14156106e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106de9061117e565b60405180910390fd5b600260048111156106fb576106fa611103565b5b81600481111561070e5761070d611103565b5b141561074f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610746906111ea565b60405180910390fd5b6003600481111561076357610762611103565b5b81600481111561077657610775611103565b5b14156107b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ae9061127c565b60405180910390fd5b6004808111156107ca576107c9611103565b5b8160048111156107dd576107dc611103565b5b141561081e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108159061130e565b60405180910390fd5b5b50565b60008383833060405160200161083b949392919061132e565b6040516020818303038152906040528051906020012090509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c111561089557600060039150915061095e565b601b8560ff16141580156108ad5750601c8560ff1614155b156108bf57600060049150915061095e565b6000600187878787604051600081526020016040526040516108e4949392919061138f565b6020604051602081039080840390855afa158015610906573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109555760006001925092505061095e565b80600092509250505b94509492505050565b6000806000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85169150601b8560ff1c0190506109a78782888561085a565b935093505050935093915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109ea826109bf565b9050919050565b6109fa816109df565b8114610a0557600080fd5b50565b600081359050610a17816109f1565b92915050565b600060208284031215610a3357610a326109b5565b5b6000610a4184828501610a08565b91505092915050565b6000819050919050565b610a5d81610a4a565b82525050565b6000602082019050610a786000830184610a54565b92915050565b600080fd5b600060c08284031215610a9957610a98610a7e565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610ac757610ac6610aa2565b5b8235905067ffffffffffffffff811115610ae457610ae3610aa7565b5b602083019150836001820283011115610b0057610aff610aac565b5b9250929050565b600080600060408486031215610b2057610b1f6109b5565b5b600084013567ffffffffffffffff811115610b3e57610b3d6109ba565b5b610b4a86828701610a83565b935050602084013567ffffffffffffffff811115610b6b57610b6a6109ba565b5b610b7786828701610ab1565b92509250509250925092565b60008115159050919050565b610b9881610b83565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bd8578082015181840152602081019050610bbd565b83811115610be7576000848401525b50505050565b6000601f19601f8301169050919050565b6000610c0982610b9e565b610c138185610ba9565b9350610c23818560208601610bba565b610c2c81610bed565b840191505092915050565b6000604082019050610c4c6000830185610b8f565b8181036020830152610c5e8184610bfe565b90509392505050565b6000602082019050610c7c6000830184610b8f565b92915050565b600082825260208201905092915050565b7f4d696e696d616c466f727761726465723a207369676e617475726520646f657360008201527f206e6f74206d6174636820726571756573740000000000000000000000000000602082015250565b6000610cef603283610c82565b9150610cfa82610c93565b604082019050919050565b60006020820190508181036000830152610d1e81610ce2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d5f82610a4a565b9150610d6a83610a4a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d9f57610d9e610d25565b5b828201905092915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112610dd657610dd5610daa565b5b80840192508235915067ffffffffffffffff821115610df857610df7610daf565b5b602083019250600182023603831315610e1457610e13610db4565b5b509250929050565b600081905092915050565b82818337600083830152505050565b6000610e428385610e1c565b9350610e4f838584610e27565b82840190509392505050565b60008160601b9050919050565b6000610e7382610e5b565b9050919050565b6000610e8582610e68565b9050919050565b610e9d610e98826109df565b610e7a565b82525050565b6000610eb0828587610e36565b9150610ebc8284610e8c565b601482019150819050949350505050565b6000610ed882610b9e565b610ee28185610e1c565b9350610ef2818560208601610bba565b80840191505092915050565b6000610f0a8284610ecd565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f4f82610a4a565b9150610f5a83610a4a565b925082610f6a57610f69610f15565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6000610fb1828486610e36565b91508190509392505050565b6000819050919050565b610fd081610fbd565b82525050565b610fdf816109df565b82525050565b600060e082019050610ffa600083018a610fc7565b6110076020830189610fd6565b6110146040830188610fd6565b6110216060830187610a54565b61102e6080830186610a54565b61103b60a0830185610a54565b61104860c0830184610fc7565b98975050505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611095600283611054565b91506110a08261105f565b600282019050919050565b6000819050919050565b6110c66110c182610fbd565b6110ab565b82525050565b60006110d782611088565b91506110e382856110b5565b6020820191506110f382846110b5565b6020820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000611168601883610c82565b915061117382611132565b602082019050919050565b600060208201905081810360008301526111978161115b565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b60006111d4601f83610c82565b91506111df8261119e565b602082019050919050565b60006020820190508181036000830152611203816111c7565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000611266602283610c82565b91506112718261120a565b604082019050919050565b6000602082019050818103600083015261129581611259565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006112f8602283610c82565b91506113038261129c565b604082019050919050565b60006020820190508181036000830152611327816112eb565b9050919050565b60006080820190506113436000830187610fc7565b6113506020830186610fc7565b61135d6040830185610fc7565b61136a6060830184610fd6565b95945050505050565b600060ff82169050919050565b61138981611373565b82525050565b60006080820190506113a46000830187610fc7565b6113b16020830186611380565b6113be6040830185610fc7565b6113cb6060830184610fc7565b9594505050505056fea2646970667358221220abd33a2e5b09bd00d4de73949e5bfb9a67e3f482a58d9939bcc95dd16d86a48964736f6c63430008090033";

export class TrustedForwarder__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TrustedForwarder> {
    return super.deploy(overrides || {}) as Promise<TrustedForwarder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TrustedForwarder {
    return super.attach(address) as TrustedForwarder;
  }
  connect(signer: Signer): TrustedForwarder__factory {
    return super.connect(signer) as TrustedForwarder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrustedForwarderInterface {
    return new utils.Interface(_abi) as TrustedForwarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TrustedForwarder {
    return new Contract(address, _abi, signerOrProvider) as TrustedForwarder;
  }
}
