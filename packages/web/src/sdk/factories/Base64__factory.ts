/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Base64, Base64Interface } from "../Base64";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "encode",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61060e610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806312496a1b1461003a575b600080fd5b610054600480360381019061004f919061035c565b61006a565b604051610061919061042d565b60405180910390f35b6060600082519050600081141561009357604051806020016040528060008152509150506101fd565b600060036002836100a49190610488565b6100ae919061050d565b60046100ba919061053e565b905060006020826100cb9190610488565b67ffffffffffffffff8111156100e4576100e3610231565b5b6040519080825280601f01601f1916602001820160405280156101165781602001600182028036833780820191505090505b5090506000604051806060016040528060408152602001610599604091399050600181016020830160005b868110156101ba5760038101905062ffffff818a015116603f8160121c168401518060081b905060ff603f83600c1c1686015116810190508060081b905060ff603f8360061c1686015116810190508060081b905060ff603f831686015116810190508060e01b90508084526004840193505050610141565b5060038606600181146101d457600281146101e4576101ef565b613d3d60f01b60028303526101ef565b603d60f81b60018303525b508484525050819450505050505b919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61026982610220565b810181811067ffffffffffffffff8211171561028857610287610231565b5b80604052505050565b600061029b610202565b90506102a78282610260565b919050565b600067ffffffffffffffff8211156102c7576102c6610231565b5b6102d082610220565b9050602081019050919050565b82818337600083830152505050565b60006102ff6102fa846102ac565b610291565b90508281526020810184848401111561031b5761031a61021b565b5b6103268482856102dd565b509392505050565b600082601f83011261034357610342610216565b5b81356103538482602086016102ec565b91505092915050565b6000602082840312156103725761037161020c565b5b600082013567ffffffffffffffff8111156103905761038f610211565b5b61039c8482850161032e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156103df5780820151818401526020810190506103c4565b838111156103ee576000848401525b50505050565b60006103ff826103a5565b61040981856103b0565b93506104198185602086016103c1565b61042281610220565b840191505092915050565b6000602082019050818103600083015261044781846103f4565b905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104938261044f565b915061049e8361044f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104d3576104d2610459565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006105188261044f565b91506105238361044f565b925082610533576105326104de565b5b828204905092915050565b60006105498261044f565b91506105548361044f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561058d5761058c610459565b5b82820290509291505056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220a77643cf02ccc5e28f9095a4b0c24f2b2e42bc868c5edddbb2e56d3c15dbf6b764736f6c63430008090033";

export class Base64__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Base64> {
    return super.deploy(overrides || {}) as Promise<Base64>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Base64 {
    return super.attach(address) as Base64;
  }
  connect(signer: Signer): Base64__factory {
    return super.connect(signer) as Base64__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Base64Interface {
    return new utils.Interface(_abi) as Base64Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Base64 {
    return new Contract(address, _abi, signerOrProvider) as Base64;
  }
}
