/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LandGranter, LandGranterInterface } from "../LandGranter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "exquisiteLandAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "InviteCoinCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "coinCreator",
        type: "address",
      },
    ],
    name: "InviteCoinUsed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "coinCreator",
        type: "address",
      },
    ],
    name: "grant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200107f3803806200107f8339818101604052810190620000379190620001d5565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019d8262000170565b9050919050565b620001af8162000190565b8114620001bb57600080fd5b50565b600081519050620001cf81620001a4565b92915050565b600060208284031215620001ee57620001ed6200016b565b5b6000620001fe84828501620001be565b91505092915050565b610e6880620002176000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063150b7a021461005c5780631f0ec0e81461008c578063715018a6146100a85780638da5cb5b146100b2578063f2fde38b146100d0575b600080fd5b610076600480360381019061007191906109a6565b6100ec565b6040516100839190610a64565b60405180910390f35b6100a660048036038101906100a19190610a7f565b61024f565b005b6100b0610543565b005b6100ba6105cb565b6040516100c79190610ae1565b60405180910390f35b6100ea60048036038101906100e59190610afc565b6105f4565b005b60003073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016101609190610b38565b60206040518083038186803b15801561017857600080fd5b505afa15801561018c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b09190610b68565b73ffffffffffffffffffffffffffffffffffffffff1614610206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fd90610bf2565b60405180910390fd5b7f387c7c961b10d8ca6937855e244c1d13aaea6be9eadfab2d4c810480dcb178b9836040516102359190610b38565b60405180910390a163150b7a0260e01b9050949350505050565b6102576106ec565b73ffffffffffffffffffffffffffffffffffffffff166102756105cb565b73ffffffffffffffffffffffffffffffffffffffff16146102cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c290610c5e565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161033d9190610b38565b60206040518083038186803b15801561035557600080fd5b505afa158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d9190610b68565b73ffffffffffffffffffffffffffffffffffffffff16146103e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103da90610cca565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3084866040518463ffffffff1660e01b815260040161044293929190610cea565b600060405180830381600087803b15801561045c57600080fd5b505af1158015610470573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017ad90584836040518363ffffffff1660e01b81526004016104d1929190610d40565b600060405180830381600087803b1580156104eb57600080fd5b505af11580156104ff573d6000803e3d6000fd5b505050507fad00ee60045891c5460bce63993b1124f2a1fb064824cced6d6ffb83a27f9d5583838360405161053693929190610d69565b60405180910390a1505050565b61054b6106ec565b73ffffffffffffffffffffffffffffffffffffffff166105696105cb565b73ffffffffffffffffffffffffffffffffffffffff16146105bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b690610c5e565b60405180910390fd5b6105c960006106f4565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105fc6106ec565b73ffffffffffffffffffffffffffffffffffffffff1661061a6105cb565b73ffffffffffffffffffffffffffffffffffffffff1614610670576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066790610c5e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d790610e12565b60405180910390fd5b6106e9816106f4565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107f7826107cc565b9050919050565b610807816107ec565b811461081257600080fd5b50565b600081359050610824816107fe565b92915050565b6000819050919050565b61083d8161082a565b811461084857600080fd5b50565b60008135905061085a81610834565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108b38261086a565b810181811067ffffffffffffffff821117156108d2576108d161087b565b5b80604052505050565b60006108e56107b8565b90506108f182826108aa565b919050565b600067ffffffffffffffff8211156109115761091061087b565b5b61091a8261086a565b9050602081019050919050565b82818337600083830152505050565b6000610949610944846108f6565b6108db565b90508281526020810184848401111561096557610964610865565b5b610970848285610927565b509392505050565b600082601f83011261098d5761098c610860565b5b813561099d848260208601610936565b91505092915050565b600080600080608085870312156109c0576109bf6107c2565b5b60006109ce87828801610815565b94505060206109df87828801610815565b93505060406109f08782880161084b565b925050606085013567ffffffffffffffff811115610a1157610a106107c7565b5b610a1d87828801610978565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a5e81610a29565b82525050565b6000602082019050610a796000830184610a55565b92915050565b600080600060608486031215610a9857610a976107c2565b5b6000610aa68682870161084b565b9350506020610ab786828701610815565b9250506040610ac886828701610815565b9150509250925092565b610adb816107ec565b82525050565b6000602082019050610af66000830184610ad2565b92915050565b600060208284031215610b1257610b116107c2565b5b6000610b2084828501610815565b91505092915050565b610b328161082a565b82525050565b6000602082019050610b4d6000830184610b29565b92915050565b600081519050610b62816107fe565b92915050565b600060208284031215610b7e57610b7d6107c2565b5b6000610b8c84828501610b53565b91505092915050565b600082825260208201905092915050565b7f4e6f74206f776e6572206f6620746f6b656e0000000000000000000000000000600082015250565b6000610bdc601283610b95565b9150610be782610ba6565b602082019050919050565b60006020820190508181036000830152610c0b81610bcf565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c48602083610b95565b9150610c5382610c12565b602082019050919050565b60006020820190508181036000830152610c7781610c3b565b9050919050565b7f4920646f6e27742068617665207468697320746f6b656e2e0000000000000000600082015250565b6000610cb4601883610b95565b9150610cbf82610c7e565b602082019050919050565b60006020820190508181036000830152610ce381610ca7565b9050919050565b6000606082019050610cff6000830186610ad2565b610d0c6020830185610ad2565b610d196040830184610b29565b949350505050565b600063ffffffff82169050919050565b610d3a81610d21565b82525050565b6000604082019050610d556000830185610d31565b610d626020830184610ad2565b9392505050565b6000606082019050610d7e6000830186610b29565b610d8b6020830185610ad2565b610d986040830184610ad2565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610dfc602683610b95565b9150610e0782610da0565b604082019050919050565b60006020820190508181036000830152610e2b81610def565b905091905056fea2646970667358221220ed801f72288a17b8114a89223d1b54e855908971b53ac059dca2f020c2343d9664736f6c63430008090033";

export class LandGranter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    exquisiteLandAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LandGranter> {
    return super.deploy(
      exquisiteLandAddress,
      overrides || {}
    ) as Promise<LandGranter>;
  }
  getDeployTransaction(
    exquisiteLandAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(exquisiteLandAddress, overrides || {});
  }
  attach(address: string): LandGranter {
    return super.attach(address) as LandGranter;
  }
  connect(signer: Signer): LandGranter__factory {
    return super.connect(signer) as LandGranter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LandGranterInterface {
    return new utils.Interface(_abi) as LandGranterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LandGranter {
    return new Contract(address, _abi, signerOrProvider) as LandGranter;
  }
}
